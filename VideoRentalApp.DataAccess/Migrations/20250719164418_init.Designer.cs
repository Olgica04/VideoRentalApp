// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VideoRentalApp.DataAccess;

#nullable disable

namespace VideoRentalApp.DataAccess.Migrations
{
    [DbContext(typeof(VideoRentalAppDbContext))]
    [Migration("20250719164418_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VideoRentalApp.Domain.Models.Cast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Part")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Cast");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            Name = "Keanu Reeves",
                            Part = 1
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 1,
                            Name = "Anne Moss",
                            Part = 3
                        },
                        new
                        {
                            Id = 3,
                            MovieId = 2,
                            Name = "Leonardo DiCaprio",
                            Part = 1
                        },
                        new
                        {
                            Id = 4,
                            MovieId = 3,
                            Name = "Matthew Brown",
                            Part = 2
                        });
                });

            modelBuilder.Entity("VideoRentalApp.Domain.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgeRestriction")
                        .HasColumnType("int");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("Language")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgeRestriction = 16,
                            Duration = 2.1600000000000001,
                            Genre = 5,
                            IsAvailable = true,
                            Language = 1,
                            Quantity = 1,
                            ReleaseDate = new DateTime(1999, 3, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Matrix"
                        },
                        new
                        {
                            Id = 2,
                            AgeRestriction = 18,
                            Duration = 2.2799999999999998,
                            Genre = 5,
                            IsAvailable = true,
                            Language = 1,
                            Quantity = 1,
                            ReleaseDate = new DateTime(2010, 7, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Inception"
                        },
                        new
                        {
                            Id = 3,
                            AgeRestriction = 16,
                            Duration = 2.7999999999999998,
                            Genre = 1,
                            IsAvailable = true,
                            Language = 1,
                            Quantity = 1,
                            ReleaseDate = new DateTime(2014, 11, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Accountant"
                        });
                });

            modelBuilder.Entity("VideoRentalApp.Domain.Models.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("UserId");

                    b.ToTable("Rental");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MovieId = 1,
                            RentedOn = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            MovieId = 2,
                            RentedOn = new DateTime(2025, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            MovieId = 1,
                            RentedOn = new DateTime(2025, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnedOn = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("VideoRentalApp.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<long>("CardNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSubscriptionExpired")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubscriptionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 28,
                            CardNumber = 1111222233334444L,
                            CreatedOn = new DateTime(2025, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "stefan123@example.com",
                            FirstName = "Stefan",
                            IsSubscriptionExpired = false,
                            LastName = "Stefanovski",
                            SubscriptionType = 3
                        },
                        new
                        {
                            Id = 2,
                            Age = 36,
                            CardNumber = 2222333355556666L,
                            CreatedOn = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bobbobski@example.com",
                            FirstName = "Bob",
                            IsSubscriptionExpired = false,
                            LastName = "Bobski",
                            SubscriptionType = 2
                        },
                        new
                        {
                            Id = 3,
                            Age = 19,
                            CardNumber = 5555666688881111L,
                            CreatedOn = new DateTime(2023, 12, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "petko5@example.com",
                            FirstName = "Petko",
                            IsSubscriptionExpired = true,
                            LastName = "Petkovski",
                            SubscriptionType = 1
                        },
                        new
                        {
                            Id = 4,
                            Age = 39,
                            CardNumber = 555511114545000L,
                            CreatedOn = new DateTime(2024, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ivanaIv@example.com",
                            FirstName = "Ivana",
                            IsSubscriptionExpired = false,
                            LastName = "Ivanovska",
                            SubscriptionType = 3
                        },
                        new
                        {
                            Id = 5,
                            Age = 23,
                            CardNumber = 1122334455667788L,
                            CreatedOn = new DateTime(2023, 5, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jovana19@example.com",
                            FirstName = "Jovana",
                            IsSubscriptionExpired = false,
                            LastName = "Jovanovska",
                            SubscriptionType = 1
                        });
                });

            modelBuilder.Entity("VideoRentalApp.Domain.Models.Cast", b =>
                {
                    b.HasOne("VideoRentalApp.Domain.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("VideoRentalApp.Domain.Models.Rental", b =>
                {
                    b.HasOne("VideoRentalApp.Domain.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VideoRentalApp.Domain.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
